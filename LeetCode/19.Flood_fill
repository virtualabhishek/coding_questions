// [DFS]

class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        int color = image[sr][sc];
        if(color!=newColor)  // To avoid infinite loop
            mark(image,sr,sc,newColor,color);
        return image;
    }

    void mark(vector<vector<int>>& image, int sr, int sc, int newColor, int color)
    {

        if(image[sr][sc] == color)
        {
            image[sr][sc] = newColor;

            if(sc-1 >= 0)
                mark(image,sr,sc-1,newColor,color);
            if(sc+1 < image[0].size())
                mark(image,sr,sc+1,newColor,color);
            if(sr-1 >= 0)
                mark(image,sr-1,sc,newColor,color);
            if(sr+1 < image.size())
                mark(image,sr+1,sc,newColor,color);

        }

    }
};