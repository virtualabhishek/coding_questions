/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        if(!root)
            return false;

        int left_max,right_min;
        if(root->left)
        {
            TreeNode* ptr=root->left;
            left_max = ptr->val;
            while(ptr)
            {
                left_max = ptr->val;
                ptr=ptr->right;
            }
            if(root->val <= left_max)
                return false;
        }

        if(root->right)
        {
            TreeNode* ptr=root->right;
            right_min = ptr->val;
            while(ptr)
            {
                right_min = ptr->val;
                ptr=ptr->left;
            }
            if(root->val >= right_min)
                return false;
        }


        if(root->left && isValidBST(root->left)==false)
            return false;

        if(root->right && isValidBST(root->right)==false)
            return false;

        return true;

    }


};