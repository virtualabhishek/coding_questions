class Solution {
public:
    int findMin(vector<int>& nums) {
        int l=0;
        int r=nums.size()-1;
        while(l<=r)
        {
            if(nums[l]<=nums[r])
                return nums[l];

            int m = l+(r-l)/2;
            if(nums[r]<nums[m])
            {
                l = m+1;
            }
            else
            {
                r = m;
            }
        }
        return nums[0];
    }
};

// class Solution {
// public:
//     int findMin(vector<int>& nums) {
//         int l=0;
//         int r=nums.size()-1;
//         while(l<=r)
//         {
//             int m = l+(r-l)/2;
//             if(m-1>=0 && nums[m]<nums[m-1])
//             {
//                 return nums[m];
//             }
//             else if(nums[l]>nums[m])
//             {
//                 r = m-1;
//             }
//             else if(nums[r]<nums[m])
//             {
//                 l = m+1;
//             }
//             else
//             {
//                 return nums[l];
//             }
//         }
//         return nums[0];
//     }
// };