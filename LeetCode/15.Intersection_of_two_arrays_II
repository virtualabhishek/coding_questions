// Using Hashmap

class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int> c;
        vector<int> res;
        for(int i=0;i<nums1.size();i++)
        {
            ++c[nums1[i]];
        }
        for(int i=0;i<nums2.size();i++)
        {
            if(c[nums2[i]]>0)
            {
                --c[nums2[i]];
                res.push_back(nums2[i]);
            }
        }
        return res;
    }
};


// Using sorting
//
// class Solution {
// public:
//     vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
//         sort(nums1.begin(),nums1.end());
//         sort(nums2.begin(),nums2.end());

//         vector<int> res;
//         int l=0,r=0;
//         while(l<nums1.size() && r<nums2.size())
//         {
//             if(nums1[l]==nums2[r])
//             {
//                 res.push_back(nums1[l]);
//                 l++;r++;
//             }
//             else if(nums1[l]>nums2[r])
//             {
//                 r++;
//             }
//             else
//             {
//                 l++;
//             }
//         }
//         return res;
//     }
// };