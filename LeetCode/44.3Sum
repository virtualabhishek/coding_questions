class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        if(nums.size()<3)
            return {};
        vector<vector<int>> res;
        sort(nums.begin(), nums.end());
        for(int i=0;i<nums.size()-2;i++)
        {
            if (nums[i] > 0) // if element > 0 then sum > 0, so break
                break;
            if(i>0 && nums[i]==nums[i-1]) // skip duplicates in i
                continue;
            int l = i+1;
            int r = nums.size()-1;
            while(l<r)
            {
                int sum = nums[i]+nums[l]+nums[r];
                if(sum == 0)
                {
                    res.push_back({nums[i],nums[l],nums[r]});
                    while(l<r && nums[l]==nums[l+1])  // skip duplicates in l and r
                        l++;
                    while(l<r && nums[r]==nums[r-1])
                        r--;
                    l++;r--;
                }
                else if(sum > 0)
                    r--;
                else
                    l++;

            }
        }
        return res;
    }
};