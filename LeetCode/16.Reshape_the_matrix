class Solution {
public:
    vector<vector<int>> matrixReshape(vector<vector<int>>& mat, int r, int c) {
        int m = mat.size();
        int n = mat[0].size();

        if(m*n != r*c)
            return mat;

        vector<vector<int>> res(r,vector<int>(c));
        int row=0,col=0;

        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                res[row][col] = mat[i][j];
                col++;
                if(col==c)
                {
                    row++;
                    col=0;
                }
            }
        }

        return res;
    }
};



// class Solution {
// public:
//     vector<vector<int>> matrixReshape(vector<vector<int>>& mat, int r, int c) {
//         int m = mat.size();
//         int n = mat[0].size();

//         vector<int> val;
//         for(int i=0;i<m;i++)
//         {
//             for(int j=0;j<n;j++)
//             {
//                 val.push_back(mat[i][j]);
//             }
//         }

//         if(m*n != r*c)
//             return mat;

//         vector<vector<int>> res;
//         int x=0;
//         for(int k=0;k<r;k++)
//         {
//             vector<int> st;
//             for(int l=0;l<c;l++)
//             {
//                 st.push_back(val[x++]);
//             }
//             res.push_back(st);
//         }

//         return res;
//     }
// };