// [Backtracking]
class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> combo;
        permutations(res,nums,0);
        return res;
    }

    void permutations(vector<vector<int>> &res, vector<int> &nums, int k)
    {
        if(k==nums.size())
        {
            res.push_back(nums);
            return;
        }

        for(int i=k; i<nums.size(); i++)
        {
            // swapping makes it inline
            swap(nums[i],nums[k]);
            permutations(res,nums,k+1);
            swap(nums[i],nums[k]);
        }
    }
};